// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4156.Robot2019.subsystems;


import org.usfirst.frc4156.Robot2019.commands.Drive;

import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;


public class DriveSubsystem extends Subsystem {

    private Spark frontLeft;
    private Spark rearLeft;
    private SpeedControllerGroup leftMotors;

    private Spark frontRight;
    private Spark rearRight;
    private SpeedControllerGroup rightMotors;

    private DifferentialDrive arcadeDrive;


    public DriveSubsystem() {
        frontLeft = new Spark(1);
        addChild("FrontLeft",frontLeft);
        frontLeft.setInverted(false);
        
        rearLeft = new Spark(2);
        addChild("RearLeft",rearLeft);
        rearLeft.setInverted(false);
        
        leftMotors = new SpeedControllerGroup(frontLeft, rearLeft  );
        addChild("LeftMotors",leftMotors);
        
        
        frontRight = new Spark(3);
        addChild("FrontRight",frontRight);
        frontRight.setInverted(false);
        
        rearRight = new Spark(4);
        addChild("RearRight",rearRight);
        rearRight.setInverted(false);
        
        rightMotors = new SpeedControllerGroup(frontRight, rearRight  );
        addChild("RightMotors",rightMotors);
        

        arcadeDrive = new DifferentialDrive(leftMotors, rightMotors);
    }

    @Override
    public void initDefaultCommand() {
        setDefaultCommand(new Drive());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void drive(double xAxis, double yAxis){
        arcadeDrive.arcadeDrive(xAxis, yAxis);
    }

    public void stop(){
        rightMotors.stopMotor();
        leftMotors.stopMotor();
    }

}

